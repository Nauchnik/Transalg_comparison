// Входной 512-битный блок текста, состоит из 32-битных подблоков
__in bit M1[16][32];
bit M2[16][32];
__out bit dif[48][32];

// Инициализируем переменные сцепления, в них же накапливается результат
bit A[32] = 0x67452301;
bit B[32] = 0xEFCDAB89;
bit C[32] = 0x98BADCFE;
bit D[32] = 0x10325476;

// Нелинейные функции
bit F(bit X[32], bit Y[32], bit Z[32])
{
	return (X&Y)|(!X&Z);
}

bit G(bit X[32], bit Y[32], bit Z[32])
{
	return X&Y | X&Z | Y&Z;
}

bit H(bit X[32], bit Y[32], bit Z[32])
{
	return X^Y^Z;
}

// Round 1, (a + F(b, c, d) + M) <<< s
bit FF(bit a[32], bit b[32], bit c[32], bit d[32], bit M[32], int s)
{
	a = sum(sum(a, F(b, c, d), 32), M, 32);
	return (a <<< s);
}

// Round 2, (a + G(b, c, d) + M + 0x5A827999) <<< s
bit GG(bit a[32], bit b[32], bit c[32], bit d[32], bit M[32], int s)
{
	a = sum(sum(sum(a, G(b, c, d), 32), M, 32), 0x5A827999, 32);
	return (a <<< s);
}

// Round 3, (a + H(b, c, d) + M + 0x6ED9EBA1) <<< s
bit HH(bit a[32], bit b[32], bit c[32], bit d[32], bit M[32], int s)
{
	a = sum(sum(sum(a, H(b, c, d), 32), M, 32), 0x6ED9EBA1, 32);
	return (a <<< s);
}

void main()
{
	bit a1[32] = A;
	bit b1[32] = B;
	bit c1[32] = C;
	bit d1[32] = D;
	bit a2[32] = A;
	bit b2[32] = B;
	bit c2[32] = C;
	bit d2[32] = D;
	
	// bit M2[16][32] ;
	M2[0]=M1[0];
	M2[1]=sum(M1[1],0x80000000,32);
	M2[2]=sum(M1[2],0x70000000,32);
	M2[3]=M1[3];
	M2[4]=M1[4];
	M2[5]=M1[5];
	M2[6]=M1[6];
	M2[7]=M1[7];
	M2[8]=M1[8];
	M2[9]=M1[9];
	M2[10]=M1[10];
	M2[11]=M1[11];
	M2[12]=sum(M1[12],0xffff0000,32);
	M2[13]=M1[13];
	M2[14]=M1[14];
	M2[15]=M1[15] ;

	// Round 1: FF(a,b,c,d,M,s) означает a = (a + F(b,c,d) + M) <<< s

	a1 = FF(a1, b1, c1, d1, M1[0], 3);
	a2 = FF(a2, b2, c2, d2, M2[0], 3);
	dif[0]=a1^a2;
	d1 = FF(d1, a1, b1, c1, M1[1], 7);
	d2 = FF(d2, a2, b2, c2, M2[1], 7);
	dif[1]=d2^(d1+(1<<<6));
	c1 = FF(c1, d1, a1, b1, M1[2], 11);
	c2 = FF(c2, d2, a2, b2, M2[2], 11);
	dif[2]=(c2+(1<<<7))^(c1+(1<<<10));
	b1 = FF(b1, c1, d1, a1, M1[3], 19);
	b2 = FF(b2, c2, d2, a2, M2[3], 19);
	dif[3]=b2^(b1+(1<<<25));


	a1 = FF(a1, b1, c1, d1, M1[4], 3);
	a2 = FF(a2, b2, c2, d2, M2[4], 3);
	dif[4]=a1^a2;
	d1 = FF(d1, a1, b1, c1, M1[5], 7);
	d2 = FF(d2, a2, b2, c2, M2[5], 7);
	dif[5]=d2^(d1+(1<<<13));
	c1 = FF(c1, d1, a1, b1, M1[6], 11);
	c2 = FF(c2, d2, a2, b2, M2[6], 11);
	dif[6]=(c2+(1<<<18))^(c1+(1<<<21));
	b1 = FF(b1, c1, d1, a1, M1[7], 19);
	b2 = FF(b2, c2, d2, a2, M2[7], 19);
	dif[7]=b2^(b1+(1<<<12));
	

	a1 = FF(a1, b1, c1, d1, M1[8], 3);
	a2 = FF(a2, b2, c2, d2, M2[8], 3);
	dif[8]=a2^(a1+(1<<<16));
	d1 = FF(d1, a1, b1, c1, M1[9], 7);
	d2 = FF(d2, a2, b2, c2, M2[9], 7);
	dif[9]=(d2+(1<<<25))^(d1+(1<<<19)+(1<<<20));
	c1 = FF(c1, d1, a1, b1, M1[10], 11);
	c2 = FF(c2, d2, a2, b2, M2[10], 11);
	dif[10]=(c2+(1<<<29))^c1;
	b1 = FF(b1, c1, d1, a1, M1[11], 19);
	b2 = FF(b2, c2, d2, a2, M2[11], 19);
	dif[11]=b2^(b1+(1<<<31));

	a1 = FF(a1, b1, c1, d1, M1[12], 3);	
	a2 = FF(a2, b2, c2, d2, M2[12], 3);
	dif[12]=a2^(a1+(1<<<22)+(1<<<25));
	d1 = FF(d1, a1, b1, c1, M1[13], 7);
	d2 = FF(d2, a2, b2, c2, M2[13], 7);	
	dif[13]=(d2+(1<<<26))^(d1+(1<<<28));
	c1 = FF(c1, d1, a1, b1, M1[14], 11);
	c2 = FF(c2, d2, a2, b2, M2[14], 11);
	dif[14]=c1^c2;
	b1 = FF(b1, c1, d1, a1, M1[15], 19);
	b2 = FF(b2, c2, d2, a2, M2[15], 19);
	dif[15]=b2^(b1+(1<<<18));

	// Round 2: GG(a,b,c,d,M,s) означает a = (a + G(b,c,d) + M + 0x5A827999) <<< s

	a1 = GG(a1, b1, c1, d1, M1[0], 3);
	a2 = GG(a2, b2, c2, d2, M2[0], 3);
	dif[16]=(a2+(1<<<28)+(1<<<31))^(a1+(1<<<25));
	d1 = GG(d1, a1, b1, c1, M1[4], 5);
	d2 = GG(d2, a2, b2, c2, M2[4], 5);
	dif[17]=d1^d2;
	c1 = GG(c1, d1, a1, b1, M1[8], 9);
	c2 = GG(c2, d2, a2, b2, M2[8], 9);	
	dif[18]=c1^c2;
	b1 = GG(b1, c1, d1, a1, M1[12], 13);
	b2 = GG(b2, c2, d2, a2, M2[12], 13);
	dif[19]=(b2+(1<<<29))^(b1+(1<<<31));

	a1 = GG(a1, b1, c1, d1, M1[1], 3);	
	a2 = GG(a2, b2, c2, d2, M2[1], 3);
	dif[20]=(a2+(1<<<31))^(a1+(1<<<28));
	d1 = GG(d1, a1, b1, c1, M1[5], 5);
	d2 = GG(d2, a2, b2, c2, M2[5], 5);
	dif[21]=d1^d2;
	c1 = GG(c1, d1, a1, b1, M1[9], 9);
	c2 = GG(c2, d2, a2, b2, M2[9], 9);
	dif[22]=c1^c2;
	b1 = GG(b1, c1, d1, a1, M1[13], 13);
	b2 = GG(b2, c2, d2, a2, M2[13], 13);
	dif[23]=b1^b2;

	a1 = GG(a1, b1, c1, d1, M1[2], 3);
	a2 = GG(a2, b2, c2, d2, M2[2], 3);
	dif[24]=a1^a2;
	d1 = GG(d1, a1, b1, c1, M1[6], 5);
	d2 = GG(d2, a2, b2, c2, M2[6], 5);
	dif[25]=d1^d2;
	c1 = GG(c1, d1, a1, b1, M1[10], 9);
	c2 = GG(c2, d2, a2, b2, M2[10], 9);
	dif[26]=c1^c2;
	b1 = GG(b1, c1, d1, a1, M1[14], 13);
	b2 = GG(b2, c2, d2, a2, M2[14], 13);
	dif[27]=b1^b2;

	a1 = GG(a1, b1, c1, d1, M1[3], 3);
	a2 = GG(a2, b2, c2, d2, M2[3], 3);
	dif[28]=a1^a2;
	d1 = GG(d1, a1, b1, c1, M1[7], 5);
	d2 = GG(d2, a2, b2, c2, M2[7], 5);
	dif[29]=d1^d2;
	c1 = GG(c1, d1, a1, b1, M1[11], 9);
	c2 = GG(c2, d2, a2, b2, M2[11], 9);
	dif[30]=c1^c2;
	b1 = GG(b1, c1, d1, a1, M1[15], 13);
	b2 = GG(b2, c2, d2, a2, M2[15], 13);
	dif[31]=b1^b2;

	// Round 3: HH(a,b,c,d,M,s) означает a = (a + H(b,c,d) + M + 0x6ED9EBA1) <<< s

	a1 = HH(a1, b1, c1, d1, M1[0], 3);
	a2 = HH(a2, b2, c2, d2, M2[0], 3);
	dif[32]=a1^a2;
	d1 = HH(d1, a1, b1, c1, M1[8], 9);
	d2 = HH(d2, a2, b2, c2, M2[8], 9);
	dif[33]=d1^d2;
	c1 = HH(c1, d1, a1, b1, M1[4], 11);
	c2 = HH(c2, d2, a2, b2, M2[4], 11);
	dif[34]=c1^c2;
	b1 = HH(b1, c1, d1, a1, M1[12], 15);
	b2 = HH(b2, c2, d2, a2, M2[12], 15);
	dif[35]=b2^(b1+(1<<<31));

	a1 = HH(a1, b1, c1, d1, M1[2], 3);
	a2 = HH(a2, b2, c2, d2, M2[2], 3);
	dif[36]=a2^(a1+(1<<<31));
	d1 = HH(d1, a1, b1, c1, M1[10], 9);
	d2 = HH(d2, a2, b2, c2, M2[10], 9);
	dif[37]=d1^d2;
	c1 = HH(c1, d1, a1, b1, M1[6], 11);
	c2 = HH(c2, d2, a2, b2, M2[6], 11);
	dif[38]=c1^c2;
	b1 = HH(b1, c1, d1, a1, M1[14], 15);
	b2 = HH(b2, c2, d2, a2, M2[14], 15);
	dif[39]=b1^b2;




	a1 = HH(a1, b1, c1, d1, M1[1], 3);
	a2 = HH(a2, b2, c2, d2, M2[1], 3);
	dif[40]=a1^a2;
	d1 = HH(d1, a1, b1, c1, M1[9], 9);
	d2 = HH(d2, a2, b2, c2, M2[9], 9);
	dif[41]=d1^d2;
	c1 = HH(c1, d1, a1, b1, M1[5], 11);
	c2 = HH(c2, d2, a2, b2, M2[5], 11);
	dif[42]=c1^c2;
	b1 = HH(b1, c1, d1, a1, M1[13], 15);
	b2 = HH(b2, c2, d2, a2, M2[13], 15);
	dif[43]=b1^b2;


	a1 = HH(a1, b1, c1, d1, M1[3], 3);
	a2 = HH(a2, b2, c2, d2, M2[3], 3);
	dif[44]=a1^a2;
	d1 = HH(d1, a1, b1, c1, M1[11], 9);
	d2 = HH(d2, a2, b2, c2, M2[11], 9);
	dif[45]=d1^d2;
	c1 = HH(c1, d1, a1, b1, M1[7], 11);
	c2 = HH(c2, d2, a2, b2, M2[7], 11);
	dif[46]=c1^c2;
	b1 = HH(b1, c1, d1, a1, M1[15], 15);
	b2 = HH(b2, c2, d2, a2, M2[15], 15);
	dif[47]=b1^b2;


	assert(!dif);

	// A1 = sum(A1, a1, 32);
	// B1 = sum(B1, b1, 32);
	// C1 = sum(C1, c1, 32);
	// D1 = sum(D1, d1, 32);
	
	// A2 = sum(A2, a2, 32);
	// B2 = sum(B2, b2, 32);
	// C2 = sum(C2, c2, 32);
	// D2 = sum(D2, d2, 32);
	// Конец обработки одного 512-битного блока	
	
	// Out[0] = A1;
	// Out[1] = B1;
	// Out[2] = C1;
	// Out[3] = D1;

}

__in bit M1[16][32];
bit M2[16][32];

bit A[32] = 0x67452301;
bit B[32] = 0xEFCDAB89;
bit C[32] = 0x98BADCFE;
bit D[32] = 0x10325476;

bit A1[32];
bit A2[32];
bit B1[32];
bit B2[32];
bit C1[32];
bit C2[32];
bit D1[32];
bit D2[32];

__out bit Out[8][32];
__out bit diff[65][32];
__out bit bits[45];

bit F(bit X[32], bit Y[32], bit Z[32])
{
	return (X&Y)|(!X&Z);
}

bit G(bit X[32], bit Y[32], bit Z[32])
{
	return (X&Z)|(Y&!Z);
}

bit H(bit X[32], bit Y[32], bit Z[32])
{
	return X^Y^Z;
}

bit I(bit X[32], bit Y[32], bit Z[32])
{
	return Y^(X|!Z);
}


// @return b + ((a + F(b, c, d) + M + t) <<< s)
bit FF(bit a[32], bit b[32], bit c[32], bit d[32], bit M[32], int s, bit t[32])
{
	a = sum(sum(sum(a, F(b, c, d), 32), M, 32), t, 32);
	return b + (a <<< s);
}

// @return b + ((a + G(b, c, d) + M + t) <<< s)
bit GG(bit a[32], bit b[32], bit c[32], bit d[32], bit M[32], int s, bit t[32])
{
	a = sum(sum(sum(a, G(b, c, d), 32), M, 32), t, 32);
	return b + (a <<< s);
}

// @return b + ((a + H(b, c, d) + M + t) <<< s)
bit HH(bit a[32], bit b[32], bit c[32], bit d[32], bit M[32], int s, bit t[32])
{
	a = sum(sum(sum(a, H(b, c, d), 32), M, 32), t, 32);
	return b + (a <<< s);
}

// @return b + ((a + I(b, c, d) + M + t) <<< s)
bit II(bit a[32], bit b[32], bit c[32], bit d[32], bit M[32], int s, bit t[32])
{
	a = sum(sum(sum(a, I(b, c, d), 32), M, 32), t, 32);
	return b + (a <<< s);
}

void main()
{


	M2[0]=M1[0];
	M2[1]=M1[1];
	M2[2]=M1[2];
	M2[3]=M1[3];
	M2[4]=sum(M1[4],0x80000000,32); 
	M2[5]=M1[5];
	M2[6]=M1[6];
	M2[7]=M1[7];
	M2[8]=M1[8];
	M2[9]=M1[9];
	M2[10]=M1[10];	
	M2[11]=sum(M1[11],0x00008000,32);
	M2[12]=M1[12];
	M2[13]=M1[13];
	M2[14]=sum(M1[14],0x80000000,32);
	M2[15]=M1[15];
	
	
	bit a1[32] = A;
	bit b1[32] = B;
	bit c1[32] = C;
	bit d1[32] = D;

	bit a2[32] = A;
	bit b2[32] = B;
	bit c2[32] = C;
	bit d2[32] = D;

// Step 1-16: FF(a,b,c,d,M_j,s,t_j) a = b + ((a + F(b,c,d) + M[j] + t_j) <<< s)

	a1 = FF(a1, b1, c1, d1, M1[0], 7, 0xd76aa478); 		// Round__1
	a2 = FF(a2, b2, c2, d2, M2[0], 7, 0xd76aa478);	
//---------------------------------------------------------------- 
	d1 = FF(d1, a1, b1, c1, M1[1], 12, 0xe8c7b756);
	d2 = FF(d2, a2, b2, c2, M2[1], 12, 0xe8c7b756);	
//----------------------------------------------------------------
	c1 = FF(c1, d1, a1, b1, M1[2], 17, 0x242070db);
	c2 = FF(c2, d2, a2, b2, M2[2], 17, 0x242070db);	
//----------------------------------------------------------------
	b1 = FF(b1, c1, d1, a1, M1[3], 22, 0xc1bdceee); 
	b2 = FF(b2, c2, d2, a2, M2[3], 22, 0xc1bdceee);
	assert(!c1[6]);
	assert(!c1[11]);
	assert(!c1[19]);
	assert(!b1[6]); 
	assert(b1[11]); 
	assert(b1[19]); 
	assert(!b1[23]); 
	assert(b1[31]);
	bits[0] = ((b1[7] ^ c1[7])); 
	bits[1] = ((b1[8] ^ c1[8]));
	bits[2] = ((b1[9] ^ c1[9])); 
	bits[3] = ((b1[10] ^ c1[10])); 
	bits[4] = ((b1[12] ^ c1[12])); 
	bits[5] = ((b1[13] ^ c1[13])); 
	bits[6] = ((b1[14] ^ c1[14])); 
	bits[7] = ((b1[15] ^ c1[15])); 
	bits[8] = ((b1[16] ^ c1[16])); 
	bits[9] = ((b1[17] ^ c1[17])); 
	bits[10] = ((b1[18] ^ c1[18]));
	bits[11] = ((b1[20] ^ c1[20])); 
	bits[12] = ((b1[21] ^ c1[21])); 
	bits[13] = ((b1[22] ^ c1[22]));	
//---------------------------------------------------------------- 	


	a1 = FF(a1, b1, c1, d1, M1[4], 7, 0xf57c0faf); 		// Round__2
	a2 = FF(a2, b2, c2, d2, M2[4], 7, 0xf57c0faf);	
	diff[5] = (sum(a2,(1<<<6),32)) ^ (a1);
	assert(!a1[6]); assert(a2[6]);	
	assert(!a1[7]); assert(a2[7]);
	assert(!a1[8]); assert(a2[8]);
	assert(!a1[9]); assert(a2[9]);
	assert(!a1[10]); assert(a2[10]);
	assert(!a1[11]); assert(a2[11]);
	assert(!a1[12]); assert(a2[12]);
	assert(!a1[13]); assert(a2[13]);
	assert(!a1[14]); assert(a2[14]);
	assert(!a1[15]); assert(a2[15]);
	assert(!a1[16]); assert(a2[16]);
	assert(!a1[17]); assert(a2[17]);
	assert(!a1[18]); assert(a2[18]);
	assert(!a1[19]); assert(a2[19]);
	assert(!a1[20]); assert(a2[20]);
	assert(!a1[21]); assert(a2[21]);
	assert(!a2[22]); assert(a1[22]);
	assert(a1[0]); 
	assert(a1[2]); 
	assert(a1[5]); 
	assert(!a1[23]); 
	assert(!a1[25]); 
	assert(a1[27]); 
	assert(a1[31]);
//----------------------------------------------------------------
	d1 = FF(d1, a1, b1, c1, M1[5], 12, 0x4787c62a);
	d2 = FF(d2, a2, b2, c2, M2[5], 12, 0x4787c62a);
	diff[6] = sum(d2,(1<<<6),32) ^ sum(d1,(1<<<23)+(1<<<31),32);
	assert(!d2[6]); assert(d1[6]);	
	assert(!d1[23]); assert(d2[23]);
	assert(!d1[31]); assert(d2[31]);
	assert(d1[0]); 
	assert(!d1[2]); 
	assert(!d1[5]); 
	assert(!d1[7]); 
	assert(!d1[8]); 
	assert(!d1[9]); 
	assert(d1[10]); 
	assert(d1[11]); 
	assert(d1[12]); 
	assert(d1[13]); 
	assert(!d1[14]); 
	assert(d1[15]); 
	assert(d1[16]); 
	assert(d1[17]); 
	assert(d1[18]); 
	assert(d1[19]); 
	assert(d1[20]); 
	assert(d1[21]); 
	assert(d1[22]); 
	assert(d1[25]); 
	assert(!d1[27]);  
	bits[14] = ((d1[1] ^ a1[1]));
	bits[15] = ((d1[3] ^ a1[3])); 
	bits[16] = ((d1[4] ^ a1[4])); 
	bits[17] = ((d1[24] ^ a1[24])); 
	bits[18] = ((d1[26] ^ a1[26])); 
	bits[19] = ((d1[28] ^ a1[28])); 
	bits[20] = ((d1[29] ^ a1[29])); 
	bits[21] = ((d1[30] ^ a1[30])); 
//----------------------------------------------------------------
	c1 = FF(c1, d1, a1, b1, M1[6], 17, 0xa8304613);
	c2 = FF(c2, d2, a2, b2, M2[6], 17, 0xa8304613);
	diff[7] = sum(c2,(1<<<6)+(1<<<27)+1,32) ^ sum(c1,(1<<<23),32); 
	assert(!c1[0]); assert(c2[0]);	
	assert(!c1[1]); assert(c2[1]);
	assert(!c1[2]); assert(c2[2]);
	assert(!c1[3]); assert(c2[3]);
	assert(!c1[4]); assert(c2[4]);
	assert(!c2[5]); assert(c1[5]);
	assert(!c1[6]); assert(c2[6]);	
	assert(!c1[7]); assert(c2[7]);
	assert(!c1[8]); assert(c2[8]);
	assert(!c1[9]); assert(c2[9]);
	assert(!c1[10]); assert(c2[10]);
	assert(!c2[11]); assert(c1[11]);
	assert(!c2[23]); assert(c1[23]);
	assert(!c2[24]); assert(c1[24]);
	assert(!c2[25]); assert(c1[25]);
	assert(!c1[26]); assert(c2[26]);
	assert(!c1[27]); assert(c2[27]);
	assert(!c1[28]); assert(c2[28]);
	assert(!c1[29]); assert(c2[29]);
	assert(!c1[30]); assert(c2[30]);
	assert(!c1[31]); assert(c2[31]);
	assert(c1[12]); 
	assert(c1[13]); 
	assert(c1[14]); 
	assert(c1[15]); 
	assert(!c1[16]);
	assert(c1[17]); 
	assert(c1[18]); 
	assert(c1[19]); 
	assert(c1[20]); 
	assert(c1[21]); 
	assert(c1[22]); 
//----------------------------------------------------------------
	b1 = FF(b1, c1, d1, a1, M1[7], 22, 0xfd469501);
	b2 = FF(b2, c2, d2, a2, M2[7], 22, 0xfd469501);
	diff[8] = sum(b2,(1<<<15)+(1<<<17)+(1<<<23),32) ^ sum(b1,1,32);
	assert(!b1[0]); assert(b2[0]);		
	assert(!b1[15]); assert(b2[15]);
	assert(!b2[16]); assert(b1[16]);
	assert(!b1[17]); assert(b2[17]);
	assert(!b1[18]); assert(b2[18]);
	assert(!b1[19]); assert(b2[19]);
	assert(!b2[20]); assert(b1[20]);
	assert(!b2[23]); assert(b1[23]);
	assert(!b1[1]); 
	assert(!b1[2]); 
	assert(!b1[3]); 
	assert(!b1[4]); 
	assert(!b1[5]); 
	assert(b1[6]); 
	assert(!b1[7]); 
	assert(b1[8]); 
	assert(!b1[9]); 
	assert(b1[10]); 
	assert(!b1[11]); 
	assert(!b1[13]); 
	assert(b1[24]); 
	assert(!b1[25]); 
	assert(!b1[26]); 
	assert(!b1[27]); 
	assert(!b1[28]);
	assert(!b1[29]); 
	assert(!b1[30]); 
	assert(!b1[31]);
//----------------------------------------------------------------


	a1 = FF(a1, b1, c1, d1, M1[8], 7, 0x698098d8); 		// Round__3
	a2 = FF(a2, b2, c2, d2, M2[8], 7, 0x698098d8);
	diff[9] = sum(a2,(1<<<6),32) ^ sum(a1,1 + (1<<<31),32);
	assert(!a2[0]);  assert(a1[0]); 	
	assert(!a1[1]);  assert(a2[1]);
	assert(!a1[6]);  assert(a2[6]);
	assert(!a1[7]);  assert(a2[7]);
	assert(!a2[8]);  assert(a1[8]);
	assert(!a2[31]); assert(a1[31]);
//----------------------------------------------------------------
	assert(a1[2]);   assert(a1[3]); 
	assert(a1[4]);   assert(a1[5]);
	assert(a1[9]);   assert(a1[10]); 
	assert(a1[11]); 
	bits[22] = ((a1[12] ^ b1[12])); 
	assert(a1[13]);  assert(!a1[15]); 
	assert(!a1[16]); assert(!a1[17]);
	assert(!a1[18]); assert(!a1[19]); 
	assert(a1[20]);  assert(a1[24]); 
	assert(a1[25]);  assert(!a1[26]); 
	assert(a1[27]);  assert(a1[28]);
	assert(a1[29]);  assert(a1[30]); 
//----------------------------------------------------------------
	d1 = FF(d1, a1, b1, c1, M1[9], 12, 0x8b44f7af);
	d2 = FF(d2, a2, b2, c2, M2[9], 12, 0x8b44f7af);
	diff[10] = (d2) ^ sum(d1,(1<<<12)+(1<<<31),32);
	assert(!d2[12]); assert(d1[12]);
	assert(!d1[13]); assert(d2[13]);
	assert(!d1[31]); assert(d2[31]);
	assert(!d1[0]);  assert(!d1[1]); 
	assert(d1[6]);   assert(!d1[7]); 
	assert(!d1[8]);  assert(d1[15]); 
	assert(d1[16]);  assert(d1[17]); 
	assert(d1[18]);  assert(d1[19]); 
	assert(d1[20]); assert(!d1[23]); 
	assert(d1[30]); 
//----------------------------------------------------------------
	c1 = FF(c1, d1, a1, b1, M1[10], 17, 0xffff5bb1);
	c2 = FF(c2, d2, a2, b2, M2[10], 17, 0xffff5bb1);
	diff[11] = (c2) ^ sum(c1,(1<<<30)+(1<<<31),32);
	assert(!c1[30]); assert(c2[30]);	
	assert(!c1[31]); assert(c2[31]);
	assert(!c1[0]);  assert(c1[1]); 
	assert(c1[6]);   assert(c1[7]); 
	assert(!c1[8]);  assert(!c1[12]); 
	assert(!c1[13]); assert(c1[16]); 
	assert(!c1[17]); assert(!c1[18]); 
	assert(!c1[19]); assert(c1[15]);
	bits[23] = ((c1[14] ^ d1[14]));  
//----------------------------------------------------------------
	b1 = FF(b1, c1, d1, a1, M1[11], 22, 0x895cd7be);
	b2 = FF(b2, c2, d2, a2, M2[11], 22, 0x895cd7be);
	diff[12] = sum(b2,(1<<<7)+(1<<<13),32) ^ sum(b1,(1<<<31),32);
	assert(!b1[7]);  assert(b2[7]);		
	assert(!b2[8]);  assert(b1[8]);
	assert(!b1[13]); assert(b2[13]);
	assert(!b1[14]); assert(b2[14]);
	assert(!b1[15]); assert(b2[15]);
	assert(!b1[16]); assert(b2[16]);
	assert(!b1[17]); assert(b2[17]);
	assert(!b1[18]); assert(b2[18]);
	assert(!b2[19]); assert(b1[19]);
	assert(!b1[31]); assert(b2[31]);
	assert(b1[12]);  assert(!b1[30]); 
	bits[24] = ((b1[24] ^ c1[24])); 
	bits[25] = ((b1[25] ^ c1[25])); 
//----------------------------------------------------------------


	a1 = FF(a1, b1, c1, d1, M1[12], 7, 0x6b901122); 	// Round__4
	a2 = FF(a2, b2, c2, d2, M2[12], 7, 0x6b901122);
	diff[13] = (a2) ^ sum(a1,(1<<<24)+(1<<<31),32);
	assert(!a2[24]); 
	assert(a1[24]);
	assert(!a1[25]); 
	assert(a2[25]);
	assert(!a1[31]); 
	assert(a2[31]);
	assert(a1[3]); 
	assert(!a1[7]); 
	assert(!a1[8]); 
	assert(a1[13]); 
	assert(a1[14]); 
	assert(a1[15]); 
	assert(a1[16]); 
	assert(a1[17]);	
	assert(a1[19]); 
	assert(a1[30]); 
	assert(a1[18]);
//----------------------------------------------------------------
	d1 = FF(d1, a1, b1, c1, M1[13], 12, 0xfd987193);
	d2 = FF(d2, a2, b2, c2, M2[13], 12, 0xfd987193);
	diff[14] = (d2) ^ sum(d1,(1<<<31),32);
	assert(!d1[31]); 
	assert(d2[31]);	
	assert(d1[3]); 
	assert(d1[7]); 
	assert(d1[8]); 
	assert(d1[13]); 
	assert(d1[14]); 
	assert(d1[15]); 
	assert(d1[16]); 
	assert(d1[17]); 
	assert(!d1[18]); 
	assert(d1[19]); 
	assert(!d1[24]); 
	assert(!d1[25]); 
	assert(!d1[29]); 
//----------------------------------------------------------------
	c1 = FF(c1, d1, a1, b1, M1[14], 17, 0xa679438e);
	c2 = FF(c2, d2, a2, b2, M2[14], 17, 0xa679438e);
	diff[15] = sum(c2,(1<<<15),32) ^ sum(c1,(1<<<3)+(1<<<31),32);
	assert(!c1[3]);  
	assert(c2[3]);		
	assert(!c2[15]); 
	assert(c1[15]);
	assert(!c1[31]); 
	assert(c2[31]);
	assert(c1[24]); 
	assert(!c1[25]); 
	assert(c1[29]);
//----------------------------------------------------------------
	b1 = FF(b1, c1, d1, a1, M1[15], 22, 0x49b40821);
	b2 = FF(b2, c2, d2, a2, M2[15], 22, 0x49b40821);
	diff[16] = sum(b2,(1<<<29),32) ^ sum(b1,(1<<<31),32);
	assert(!b2[29]); assert(b1[29]);
	assert(!b1[31]); assert(b2[31]);
//----------------------------------------------------------------






// Step 17-32: GG(a,b,c,d,M_j,s,t_j) a = b + ((a + G(b,c,d) + M[j] + t_j) <<< s)

	a1 = GG(a1, b1, c1, d1, M1[1], 5, 0xf61e2562); 		// Round__5
	a2 = GG(a2, b2, c2, d2, M2[1], 5, 0xf61e2562);	
	diff[17] = (a2) ^ sum(a1,(1<<<31),32);
	assert(!a1[31]); assert(a2[31]);
	assert(!(a1[3] ^ b1[3])); 
	assert(!a1[17]); 
	bits[26] = ((a1[15] ^ b1[15])); 
//----------------------------------------------------------------
	d1 = GG(d1, a1, b1, c1, M1[6], 9, 0xc040b340);
	d2 = GG(d2, a2, b2, c2, M2[6], 9, 0xc040b340);
	diff[18] = (d2) ^ sum(d1,(1<<<31),32);
	assert(!d1[31]); assert(d2[31]);
	assert(d1[17]); 
	bits[27] = ((d1[29] ^ a1[29])); 
//----------------------------------------------------------------
	c1 = GG(c1, d1, a1, b1, M1[11], 14, 0x265e5a51);
	c2 = GG(c2, d2, a2, b2, M2[11], 14, 0x265e5a51);
	diff[19] = (c2) ^ sum(c1,(1<<<17)+(1<<<31),32);
	assert(!c1[17]); assert(c2[17]);
	assert(!c1[31]); assert(c2[31]);
//----------------------------------------------------------------
	b1 = GG(b1, c1, d1, a1, M1[0], 20, 0xe9b6c7aa);
	b2 = GG(b2, c2, d2, a2, M2[0], 20, 0xe9b6c7aa);
	diff[20] = (b2) ^ sum(b1,(1<<<31),32);
	assert(!b1[31]); assert(b2[31]);
//----------------------------------------------------------------


	a1 = GG(a1, b1, c1, d1, M1[5], 5, 0xd62f105d); 		// Round__6 
	a2 = GG(a2, b2, c2, d2, M2[5], 5, 0xd62f105d);
	diff[21] = (a2) ^ sum(a1,(1<<<31),32);
	assert(!a1[31]); assert(a2[31]);
//----------------------------------------------------------------
	bits[28] = ((a1[17] ^ b1[17]));
//----------------------------------------------------------------
	d1 = GG(d1, a1, b1, c1, M1[10], 9, 0x02441453);
	d2 = GG(d2, a2, b2, c2, M2[10], 9, 0x02441453);
	diff[22] = (d2) ^ sum(d1,(1<<<31),32);
	assert(!d1[31]); assert(d2[31]);
//----------------------------------------------------------------
	c1 = GG(c1, d1, a1, b1, M1[15], 14, 0xd8a1e681);
	c2 = GG(c2, d2, a2, b2, M2[15], 14, 0xd8a1e681);
	diff[23] = (c2) ^ (c1);
//----------------------------------------------------------------
	assert(!c1[31]); 
//----------------------------------------------------------------
	b1 = GG(b1, c1, d1, a1, M1[4], 20, 0xe7d3fbc8);
	b2 = GG(b2, c2, d2, a2, M2[4], 20, 0xe7d3fbc8);
	diff[24] = (b2) ^ (b1);
//----------------------------------------------------------------
	assert(b1[31]);	
//----------------------------------------------------------------


	a1 = GG(a1, b1, c1, d1, M1[9], 5, 0x21e1cde6); 		// Round__7 
	a2 = GG(a2, b2, c2, d2, M2[9], 5, 0x21e1cde6);	
//----------------------------------------------------------------
	diff[25] = (a2) ^ (a1);
	d1 = GG(d1, a1, b1, c1, M1[14], 9, 0xc33707d6);
	d2 = GG(d2, a2, b2, c2, M2[14], 9, 0xc33707d6);	
//----------------------------------------------------------------
	diff[26] = (d2) ^ (d1);
	c1 = GG(c1, d1, a1, b1, M1[3], 14, 0xf4d50d87);
	c2 = GG(c2, d2, a2, b2, M2[3], 14, 0xf4d50d87);	
//----------------------------------------------------------------
	diff[27] = (c2) ^ (c1);
	b1 = GG(b1, c1, d1, a1, M1[8], 20, 0x455a14ed);
	b2 = GG(b2, c2, d2, a2, M2[8], 20, 0x455a14ed);	
//----------------------------------------------------------------
	diff[28] = (b2) ^ (b1);



	a1 = GG(a1, b1, c1, d1, M1[13], 5, 0xa9e3e905); 	// Round__8	
	a2 = GG(a2, b2, c2, d2, M2[13], 5, 0xa9e3e905);	
//----------------------------------------------------------------
	diff[29] = (a2) ^ (a1);
	d1 = GG(d1, a1, b1, c1, M1[2], 9, 0xfcefa3f8);
	d2 = GG(d2, a2, b2, c2, M2[2], 9, 0xfcefa3f8);	
//----------------------------------------------------------------
	diff[30] = (d2) ^ (d1);
	c1 = GG(c1, d1, a1, b1, M1[7], 14, 0x676f02d9);
	c2 = GG(c2, d2, a2, b2, M2[7], 14, 0x676f02d9);	
//----------------------------------------------------------------
	diff[31] = (c2) ^ (c1);
	b1 = GG(b1, c1, d1, a1, M1[12], 20, 0x8d2a4c8a);
	b2 = GG(b2, c2, d2, a2, M2[12], 20, 0x8d2a4c8a);	
//----------------------------------------------------------------
	diff[32] = (b2) ^ (b1);





// // Step 33-48: HH(a,b,c,d,M_j,s,t_j) a = b + ((a + H(b,c,d) + M[j] + t_j) <<< s)

	a1 = HH(a1, b1, c1, d1, M1[5], 4, 0xfffa3942);		// Round__9 
	a2 = HH(a2, b2, c2, d2, M2[5], 4, 0xfffa3942);	
//----------------------------------------------------------------
	diff[33] = (a2) ^ (a1);
	d1 = HH(d1, a1, b1, c1, M1[8], 11, 0x8771f681);
	d2 = HH(d2, a2, b2, c2, M2[8], 11, 0x8771f681);	
//----------------------------------------------------------------
	diff[34] = (d2) ^ (d1);
	c1 = HH(c1, d1, a1, b1, M1[11], 16, 0x6d9d6122);
	c2 = HH(c2, d2, a2, b2, M2[11], 16, 0x6d9d6122);
	diff[35] = (c2) ^ sum(c1,(1<<<31),32);
	assert(c1[31] ^ c2[31]);	
//----------------------------------------------------------------
	b1 = HH(b1, c1, d1, a1, M1[14], 23, 0xfde5380c);
	b2 = HH(b2, c2, d2, a2, M2[14], 23, 0xfde5380c);
	diff[36] = (b2) ^ sum(b1,(1<<<31),32);
	assert(b1[31] ^ b2[31]);



	a1 = HH(a1, b1, c1, d1, M1[1], 4, 0xa4beea44);		// Round__10 
	a2 = HH(a2, b2, c2, d2, M2[1], 4, 0xa4beea44);
	diff[37] = (a2) ^ sum(a1,(1<<<31),32);
	assert(a1[31] ^ a2[31]);	
//----------------------------------------------------------------
	d1 = HH(d1, a1, b1, c1, M1[4], 11, 0x4bdecfa9);
	d2 = HH(d2, a2, b2, c2, M2[4], 11, 0x4bdecfa9);
	diff[38] = (d2) ^ sum(d1,(1<<<31),32);
	assert(d2[31] ^ d1[31]);	
//----------------------------------------------------------------
	c1 = HH(c1, d1, a1, b1, M1[7], 16, 0xf6bb4b60);
	c2 = HH(c2, d2, a2, b2, M2[7], 16, 0xf6bb4b60);
	diff[39] = (c2) ^ sum(c1,(1<<<31),32);
	assert(c2[31] ^ c1[31]);	
//----------------------------------------------------------------
	b1 = HH(b1, c1, d1, a1, M1[10], 23, 0xbebfbc70);
	b2 = HH(b2, c2, d2, a2, M2[10], 23, 0xbebfbc70);
	diff[40] = (b2) ^ sum(b1,(1<<<31),32);
	assert(b2[31] ^ b1[31]);	



	a1 = HH(a1, b1, c1, d1, M1[13], 4, 0x289b7ec6);		// Round__11 
	a2 = HH(a2, b2, c2, d2, M2[13], 4, 0x289b7ec6);
	diff[41] = (a2) ^ sum(a1,(1<<<31),32);
	assert(a1[31] ^ a2[31]);	
//----------------------------------------------------------------
	d1 = HH(d1, a1, b1, c1, M1[0], 11, 0xeaa127fa);
	d2 = HH(d2, a2, b2, c2, M2[0], 11, 0xeaa127fa);
	diff[42] = (d2) ^ sum(d1,(1<<<31),32);
	assert(d2[31] ^ d1[31]);	
//----------------------------------------------------------------
	c1 = HH(c1, d1, a1, b1, M1[3], 16, 0xd4ef3085);
	c2 = HH(c2, d2, a2, b2, M2[3], 16, 0xd4ef3085);	
	diff[43] = (c2) ^ sum(c1,(1<<<31),32);
	assert(c2[31] ^ c1[31]);	
//----------------------------------------------------------------
	b1 = HH(b1, c1, d1, a1, M1[6], 23, 0x04881d05);
	b2 = HH(b2, c2, d2, a2, M2[6], 23, 0x04881d05);
	diff[44] = (b2) ^ sum(b1,(1<<<31),32);
	assert(b2[31] ^ b1[31]);



	a1 = HH(a1, b1, c1, d1, M1[9], 4, 0xd9d4d039);		// ROUND_12
	a2 = HH(a2, b2, c2, d2, M2[9], 4, 0xd9d4d039);
	diff[45] = (a2) ^ sum(a1,(1<<<31),32);
	assert(a1[31] ^ a2[31]);		
//----------------------------------------------------------------
	d1 = HH(d1, a1, b1, c1, M1[12], 11, 0xe6db99e5);
	d2 = HH(d2, a2, b2, c2, M2[12], 11, 0xe6db99e5);
	diff[46] = (d2) ^ sum(d1,(1<<<31),32);
	assert(!d1[31]); assert(d2[31]);		
//----------------------------------------------------------------
	c1 = HH(c1, d1, a1, b1, M1[15], 16, 0x1fa27cf8);
	c2 = HH(c2, d2, a2, b2, M2[15], 16, 0x1fa27cf8);
	diff[47] = (c2) ^ sum(c1,(1<<<31),32);
	assert(!c2[31]); assert(c1[31]);	
//----------------------------------------------------------------
	b1 = HH(b1, c1, d1, a1, M1[2], 23, 0xc4ac5665);
	b2 = HH(b2, c2, d2, a2, M2[2], 23, 0xc4ac5665);
	diff[48] = (b2) ^ sum(b1,(1<<<31),32);
	assert(!b1[31]); assert(b2[31]);	
//----------------------------------------------------------------
	bits[29] = ((b1[31] ^ d1[31]));  
//----------------------------------------------------------------



//	// Step 4: II(a,b,c,d,M_j,s,t_j) îçíà÷àåò a = b + ((a + I(b,c,d) + M[j] + t_j) <<< s)

 	a1 = II(a1, b1, c1, d1, M1[0], 6, 0xf4292244);		// Round__13
 	a2 = II(a2, b2, c2, d2, M2[0], 6, 0xf4292244);
	diff[49] = (a2) ^ sum(a1,(1<<<31),32);
	assert(!a2[31]); assert(a1[31]);
//----------------------------------------------------------------
 	bits[30] = ((a1[31] ^ c1[31])); 
//----------------------------------------------------------------
 	d1 = II(d1, a1, b1, c1, M1[7], 10, 0x432aff97);
 	d2 = II(d2, a2, b2, c2, M2[7], 10, 0x432aff97);
	diff[50] = (d2) ^ sum(d1,(1<<<31),32);
	assert(!d2[31]); assert(d1[31]);
//----------------------------------------------------------------
 	assert((d1[31] ^ (b1[31]))); 	
//----------------------------------------------------------------
 	c1 = II(c1, d1, a1, b1, M1[14], 15, 0xab9423a7);
 	c2 = II(c2, d2, a2, b2, M2[14], 15, 0xab9423a7);
	diff[51] = (c2) ^ sum(c1,(1<<<31),32);
	assert(!c2[31]); assert(c1[31]);
//----------------------------------------------------------------
 	bits[31] = ((c1[31] ^ a1[31])); 
//----------------------------------------------------------------
 	b1 = II(b1, c1, d1, a1, M1[5], 21, 0xfc93a039);
 	b2 = II(b2, c2, d2, a2, M2[5], 21, 0xfc93a039);
	diff[52] = (b2) ^ sum(b1,(1<<<31),32);
	assert(!b2[31]); assert(b1[31]);
//----------------------------------------------------------------
 	bits[32] = ((b1[31] ^ d1[31])); 
//----------------------------------------------------------------




	a1 = II(a1, b1, c1, d1, M1[12], 6, 0x655b59c3);			// Round_14
	a2 = II(a2, b2, c2, d2, M2[12], 6, 0x655b59c3);
	diff[53] = (a2) ^ sum(a1,(1<<<31),32);
	assert(!a2[31]); assert(a1[31]);
//----------------------------------------------------------------
	bits[33] = ((a1[31] ^ c1[31])); 
//----------------------------------------------------------------
	d1 = II(d1, a1, b1, c1, M1[3], 10, 0x8f0ccc92);
	d2 = II(d2, a2, b2, c2, M2[3], 10, 0x8f0ccc92);
	diff[54] = (d2) ^ sum(d1,(1<<<31),32);
	assert(!d2[31]); assert(d1[31]);
//----------------------------------------------------------------
	bits[34] = ((d1[31] ^ b1[31])); 
//----------------------------------------------------------------
	c1 = II(c1, d1, a1, b1, M1[10], 15, 0xffeff47d);
	c2 = II(c2, d2, a2, b2, M2[10], 15, 0xffeff47d);
	diff[55] = (c2) ^ sum(c1,(1<<<31),32);
	assert(!c2[31]); assert(c1[31]);
//----------------------------------------------------------------
	bits[35] = ((c1[31] ^ a1[31]));
//----------------------------------------------------------------
	b1 = II(b1, c1, d1, a1, M1[1], 21, 0x85845dd1);
	b2 = II(b2, c2, d2, a2, M2[1], 21, 0x85845dd1);
	diff[56] = (b2) ^ sum(b1,(1<<<31),32);
	assert(!b2[31]); assert(b1[31]);
//----------------------------------------------------------------
	bits[36] = ((b1[31] ^ d1[31]));
//----------------------------------------------------------------


	a1 = II(a1, b1, c1, d1, M1[8], 6, 0x6fa87e4f); 		// Round__15
	a2 = II(a2, b2, c2, d2, M2[8], 6, 0x6fa87e4f);
	diff[57] = (a2) ^ sum(a1,(1<<<31),32);
	assert(!a2[31]); assert(a1[31]);
//----------------------------------------------------------------
	bits[37] = ((a1[31] ^ c1[31])); 
//----------------------------------------------------------------
	d1 = II(d1, a1, b1, c1, M1[15], 10, 0xfe2ce6e0);
	d2 = II(d2, a2, b2, c2, M2[15], 10, 0xfe2ce6e0);
	diff[58] = (d2) ^ sum(d1,(1<<<31),32);
	assert(!d2[31]); assert(d1[31]);
//----------------------------------------------------------------
	bits[38] = ((d1[31] ^ b1[31])); 
//----------------------------------------------------------------
	c1 = II(c1, d1, a1, b1, M1[6], 15, 0xa3014314);
	c2 = II(c2, d2, a2, b2, M2[6], 15, 0xa3014314);
	diff[59] = (c2) ^ sum(c1,(1<<<31),32);
	assert(!c2[31]); assert(c1[31]);		
//----------------------------------------------------------------
	bits[39] = ((c1[31] ^ a1[31])); 
//----------------------------------------------------------------
	b1 = II(b1, c1, d1, a1, M1[13], 21, 0x4e0811a1);
	b2 = II(b2, c2, d2, a2, M2[13], 21, 0x4e0811a1);
	diff[60] = (b2) ^ sum(b1,(1<<<31),32);
	assert(!b1[31]); assert(b2[31]); 		
//----------------------------------------------------------------
	assert(!b1[25]);
	assert((b1[31] ^ (d1[31])));
//----------------------------------------------------------------


	a1 = II(a1, b1, c1, d1, M1[4], 6, 0xf7537e82);		// Round__16
	a2 = II(a2, b2, c2, d2, M2[4], 6, 0xf7537e82);
	diff[61] = (a2) ^ sum(a1,(1<<<31),32); 			
//----------------------------------------------------------------
	assert(a1[25]); 
	assert(!a1[26]); 
	bits[40] = ((a1[31] ^ c1[31]));
//----------------------------------------------------------------
	d1 = II(d1, a1, b1, c1, M1[11], 10, 0xbd3af235);
	d2 = II(d2, a2, b2, c2, M2[11], 10, 0xbd3af235);
	diff[62] = (d2) ^ sum(d1,sum((1<<<25),(1<<<31),32),32); 
//----------------------------------------------------------------
	bits[41] = ((d1[31] ^ b1[31]));
//----------------------------------------------------------------
	c1 = II(c1, d1, a1, b1, M1[2], 15, 0x2ad7d2bb);
	c2 = II(c2, d2, a2, b2, M2[2], 15, 0x2ad7d2bb);
	diff[63] = (c2) ^ sum(c1,sum((1<<<25),(1<<<31),32),32); 
//----------------------------------------------------------------
	bits[42] = ((c1[31] ^ d1[31]));
//----------------------------------------------------------------
	b1 = II(b1, c1, d1, a1, M1[9], 21, 0xeb86d391);
	b2 = II(b2, c2, d2, a2, M2[9], 21, 0xeb86d391);
	diff[64] = (b2) ^ sum(b1,sum((1<<<25),(1<<<31),32),32); 			

	A1 = sum(A, a1, 32);
    B1 = sum(B, b1, 32);
    C1 = sum(C, c1, 32);
    D1 = sum(D, d1, 32);

    A2 = sum(A, a2, 32);
    B2 = sum(B, b2, 32);
    C2 = sum(C, c2, 32);
    D2 = sum(D, d2, 32);

    assert(!A1[31]); assert(A2[31]);
    assert(!D1[25]); assert(D2[25]);
    assert(!D1[31]); assert(D2[31]);
    assert(!C2[25]); assert(C1[25]);
    assert(!C1[26]); assert(C2[26]);
    assert(!C1[31]); assert(C2[31]);
    assert(!B1[25]); assert(B2[25]);
    assert(!B1[31]); assert(B2[31]); 	
	bits[43] = ((C1[31] ^ D1[31])); 
	assert(!B1[26]); 
	assert(!B1[5]);
 	bits[44] = ((B1[31] ^ C1[31]));	


    assert(!diff[5]);
    assert(!diff[6]);
    assert(!diff[7]);
    assert(!diff[8]);
    assert(!diff[9]);
    assert(!diff[10]);
    assert(!diff[11]);
    assert(!diff[12]);
    assert(!diff[13]);
    assert(!diff[14]);
    assert(!diff[15]);
    assert(!diff[16]);
    assert(!diff[17]);
    assert(!diff[18]);
    assert(!diff[19]);
    assert(!diff[20]);
    assert(!diff[21]);
    assert(!diff[22]);
    assert(!diff[23]);
    assert(!diff[24]);
    assert(!diff[25]);
    assert(!diff[26]);
    assert(!diff[27]);
    assert(!diff[28]);
    assert(!diff[29]);
    assert(!diff[30]);
    assert(!diff[31]);
    assert(!diff[32]);
    assert(!diff[33]);
    assert(!diff[34]);
    assert(!diff[35]);
    assert(!diff[36]);
    assert(!diff[37]);
    assert(!diff[38]);
    assert(!diff[39]);
    assert(!diff[40]);
    assert(!diff[41]);
    assert(!diff[42]);
    assert(!diff[43]);
    assert(!diff[44]);
    assert(!diff[45]);
    assert(!diff[46]);
    assert(!diff[47]);
    assert(!diff[48]);
    assert(!diff[49]);
    assert(!diff[50]);
    assert(!diff[51]);
    assert(!diff[52]);
    assert(!diff[53]);
    assert(!diff[54]);
    assert(!diff[55]);
    assert(!diff[56]);
    assert(!diff[57]);
    assert(!diff[58]);
    assert(!diff[59]);
    assert(!diff[60]);
    assert(!diff[61]);
    assert(!diff[62]);
    assert(!diff[63]);
    assert(!diff[64]);
    
    assert(!bits[14]);
    assert(!bits[15]);
    assert(!bits[16]);
    assert(!bits[17]);
    assert(!bits[18]);
    assert(!bits[19]);
    assert(!bits[20]);
    assert(!bits[21]);
    assert(!bits[22]);
    assert(!bits[23]);
    assert(!bits[24]);
    assert(!bits[25]);


    Out[0] = A1;
    Out[1] = B1;
    Out[2] = C1;
    Out[3] = D1;
    Out[4] = A2;
    Out[5] = B2;
    Out[6] = C2;
    Out[7] = D2;

    core_var(Out);

}







